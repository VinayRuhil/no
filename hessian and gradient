import sympy as sp
# Define the variables and the function
x, y = sp.symbols("x y")
fx = 100*((x2 - x1**2)**2) + ((1 - x1)**2)
grad = [sp.diff(fx, var) for var in (x1, x2)]
e1 = sp.diff(grad[0], x1)
e2 = sp.diff(grad[0], x2)
e3 = sp.diff(grad[1], x1)
e4 = sp.diff(grad[1], x2)


Mat = sp.Matrix([[e1, e2], [e3, e4]])
print("Hessian Matrix of f(x1, x2):")
Mat



#for gradient 
import sympy as n
from sympy import *
from sympy import symbols
from sympy import expand, factor
x,y=symbols('x y')
print(x,y)
expr=x + 2*y
expanded_form = expand(x*expr)
factor(expanded_form)
init_printing(use_unicode=True)
diff(sin(x)*exp(x),x)
integrate(exp(x)*sin(x)+exp(x)*cos(x),x)

import sympy as sp
from sympy import symbols
x1, x2 = symbols('x1 x2')
f = 100 * (x2 - x1**2)**2 + (1 - x1)**2

grad=[diff(f,x1),diff(f,x2)]
print('Gradient of f')
grad
